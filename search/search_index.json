{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About \u00b6 Abacus is a repository of open and licensed data hosted by UBC Library and used by the academic communities at SFU, UBC, UNBC, and UVic. The repository contains more than 2,100 datasets with significant collections of geospatial data, linguistics data, and survey microdata. The Abacus collection includes both open and licensed data: - Open data may be downloaded by anyone who visits the Abacus website . - Licensed data is available to faculty, staff, and students who login with their university credentials.","title":"About Abacus"},{"location":"#about","text":"Abacus is a repository of open and licensed data hosted by UBC Library and used by the academic communities at SFU, UBC, UNBC, and UVic. The repository contains more than 2,100 datasets with significant collections of geospatial data, linguistics data, and survey microdata. The Abacus collection includes both open and licensed data: - Open data may be downloaded by anyone who visits the Abacus website . - Licensed data is available to faculty, staff, and students who login with their university credentials.","title":"About"},{"location":"privacy/","text":"Abacus privacy policy \u00b6 Abacus creates user accounts that include your name and email address. This personal information is collected under the authority of section 26(c) of the Freedom of Information and Protection of Privacy Act (FIPPA). Your personal information is only used for authentication, to comply with data licensing terms, and will be kept confidential by UBC. Questions about the collection of this information may be directed to abacus.support@ubc.ca.","title":"Privacy policy"},{"location":"privacy/#abacus-privacy-policy","text":"Abacus creates user accounts that include your name and email address. This personal information is collected under the authority of section 26(c) of the Freedom of Information and Protection of Privacy Act (FIPPA). Your personal information is only used for authentication, to comply with data licensing terms, and will be kept confidential by UBC. Questions about the collection of this information may be directed to abacus.support@ubc.ca.","title":"Abacus privacy policy"},{"location":"admin/adding_data/","text":"Adding data to Abacus \u00b6 Datasets in Abacus are grouped into collections, sometimes referred to as dataverses . The collection a dataset belongs to determines which users can access it. Data added to the UNBC Library licensed data collection may be downloaded by users who authenticate with UNBC credentials, but not by members of the public. Data added to the Open data collection is available to everyone under open license terms. Info The term dataverse appears throughout the Abacus interface, particularly on pages for admin users. Abacus is an instance of the Dataverse application , an open source data repository, but the term can also refer to a collection of datasets within Abacus Who can add data? \u00b6 Users with administrative accounts may add datasets to Abacus that conform to the collection policy. Questions about the suitability of a dataset can be directed to abacus.support@ubc.ca . Data contributor Where they can add data Data librarian from an Abacus member organization Data collection for the member organization, e.g. SFU Library licensed data Representative for a non-library UBC department Data collection for the UBC department, e.g. Campus and Community Planning UBC Library data team Any collection; the data team hosts and manages Abacus Create a new dataset \u00b6 This section describes how to create a dataset using the Abacus user interface, the easiest method for beginners or those who rarely add data. Users who add data often may wish to consult the API and Dataverse utilities sections for ways to automate parts of the process. Navigate to the collection/dataverse where you would like to add data. Click the Log In link in the top right, select your instution from the drop-down menu, and login with your institutional credentials. Click the Add Data button on the right and select New Dataset from the drop-down menu. Complete the Citation Metadata portion of the form, ensuring all mandatory fields are filled. Add dataset files in the Files portion of the form, near the bottom of the page. Warning .zip files will automatically be unzipped during the upload process. This is a convenient way to add many files at once, but it's not always the desired behaviour. If you would like the file to remained zipped in the Abacus record, zip the zip file a second time before upload. Click Save Dataset . Optional: after saving, click Edit dataset and select Metadata from the dropdown. This will open an expanded form with additional metadata fields not shown on the first page. Fill additional metadata fields as desired, then save again. Use the Edit dataset drop-down options to update files and metadata as desired. The data will not be visible to end users until the dataset is published, so you can experiment without affecting anyone. When the dataset is ready, click Publish dataset to make it available to Abacus users. The dataset will be published as version 1.0.","title":"Adding data"},{"location":"admin/adding_data/#adding-data-to-abacus","text":"Datasets in Abacus are grouped into collections, sometimes referred to as dataverses . The collection a dataset belongs to determines which users can access it. Data added to the UNBC Library licensed data collection may be downloaded by users who authenticate with UNBC credentials, but not by members of the public. Data added to the Open data collection is available to everyone under open license terms. Info The term dataverse appears throughout the Abacus interface, particularly on pages for admin users. Abacus is an instance of the Dataverse application , an open source data repository, but the term can also refer to a collection of datasets within Abacus","title":"Adding data to Abacus"},{"location":"admin/adding_data/#who-can-add-data","text":"Users with administrative accounts may add datasets to Abacus that conform to the collection policy. Questions about the suitability of a dataset can be directed to abacus.support@ubc.ca . Data contributor Where they can add data Data librarian from an Abacus member organization Data collection for the member organization, e.g. SFU Library licensed data Representative for a non-library UBC department Data collection for the UBC department, e.g. Campus and Community Planning UBC Library data team Any collection; the data team hosts and manages Abacus","title":"Who can add data?"},{"location":"admin/adding_data/#create-a-new-dataset","text":"This section describes how to create a dataset using the Abacus user interface, the easiest method for beginners or those who rarely add data. Users who add data often may wish to consult the API and Dataverse utilities sections for ways to automate parts of the process. Navigate to the collection/dataverse where you would like to add data. Click the Log In link in the top right, select your instution from the drop-down menu, and login with your institutional credentials. Click the Add Data button on the right and select New Dataset from the drop-down menu. Complete the Citation Metadata portion of the form, ensuring all mandatory fields are filled. Add dataset files in the Files portion of the form, near the bottom of the page. Warning .zip files will automatically be unzipped during the upload process. This is a convenient way to add many files at once, but it's not always the desired behaviour. If you would like the file to remained zipped in the Abacus record, zip the zip file a second time before upload. Click Save Dataset . Optional: after saving, click Edit dataset and select Metadata from the dropdown. This will open an expanded form with additional metadata fields not shown on the first page. Fill additional metadata fields as desired, then save again. Use the Edit dataset drop-down options to update files and metadata as desired. The data will not be visible to end users until the dataset is published, so you can experiment without affecting anyone. When the dataset is ready, click Publish dataset to make it available to Abacus users. The dataset will be published as version 1.0.","title":"Create a new dataset"},{"location":"admin/collection_policy/","text":"Collection policy \u00b6 Statement of Abacus purpose Data refers to (define data in Abacus context) Criteria for inclusion in Abacus: data intentionally collected for its alignment with the reseearch needs and interests of member institutions. In scope data licensed for academic use operational data generated by university units/departments open data not easily (or reliably) accessed from the web Out of scope - data collected/produced in the course of research. This can be deposited in RDM platforms. - data freely available from websites with a reliable with a track record for long term access/preservation.","title":"Collection policy"},{"location":"admin/collection_policy/#collection-policy","text":"Statement of Abacus purpose Data refers to (define data in Abacus context) Criteria for inclusion in Abacus: data intentionally collected for its alignment with the reseearch needs and interests of member institutions. In scope data licensed for academic use operational data generated by university units/departments open data not easily (or reliably) accessed from the web Out of scope - data collected/produced in the course of research. This can be deposited in RDM platforms. - data freely available from websites with a reliable with a track record for long term access/preservation.","title":"Collection policy"},{"location":"admin/dataverse_utils/","text":"dataverse_utils \u00b6 https://github.com/ubc-library-rc/dataverse_utils Abacus runs on the open source Dataverse platform. This is a Python library and generalized set of utilities which help with managing Dataverse repositories.","title":"dataverse_utils"},{"location":"admin/dataverse_utils/#dataverse_utils","text":"https://github.com/ubc-library-rc/dataverse_utils Abacus runs on the open source Dataverse platform. This is a Python library and generalized set of utilities which help with managing Dataverse repositories.","title":"dataverse_utils"},{"location":"admin/fcheck/","text":"fcheck/damage \u00b6 https://github.com/ubc-library-rc/fcheck Damage is a simple command-line utility which outputs a file manifest in a variety of formats, with a special focus on statistical package files from SPSS, SAS and Stata. FCheck is the Python 3 module which powers the damage utility, which you can use in your own python code.","title":"fcheck/damage"},{"location":"admin/fcheck/#fcheckdamage","text":"https://github.com/ubc-library-rc/fcheck Damage is a simple command-line utility which outputs a file manifest in a variety of formats, with a special focus on statistical package files from SPSS, SAS and Stata. FCheck is the Python 3 module which powers the damage utility, which you can use in your own python code.","title":"fcheck/damage"},{"location":"admin/metadata_guide/","text":"Metadata guide \u00b6 This guide outlines the metadata expectations and standards for describing datasets in the Abacus data repository . Abacus is hosted on the Dataverse platform and datasets are described using the Data Documentation Initiative DDI Codebook 2.5 metadata standard. Definitions in this guide are copied from DDI 2.5 with additional notes and explanations that apply to the Abacus context. Required metadata fields \u00b6 The table below includes all the metadata fields required by the Dataverse platform. In practice most Abacus datasets have additional metadata to improve description and discovery, but only these fields are enforced by the Abacus interface. Dataverse field label DDI-C 2.5 element Title <titl> Author name <AuthEnty Contact e-mail <contact> Description text <abstract> Subject <subect> Place Contact email/contact name Unique file name (for files in a dataset) Recommendations for non-required fields \u00b6 If there are sections that should be deleted, or recommendations. Also a place to note that you need to save the 'basic block' first before you can access the other metadata fields. Added fields, after creating the dataset \u00b6 These should be added when available to improve findability and consistency across Abacus datasets. Dataverse field label | DDI-C 2.5 element | --- | --- | Production Date | <prodDate> | Geographic Coverage, Country/recommendations | <nation> | Geographic Unit | <geogUnit> | Keyword | <keyword>","title":"Metadata guide"},{"location":"admin/metadata_guide/#metadata-guide","text":"This guide outlines the metadata expectations and standards for describing datasets in the Abacus data repository . Abacus is hosted on the Dataverse platform and datasets are described using the Data Documentation Initiative DDI Codebook 2.5 metadata standard. Definitions in this guide are copied from DDI 2.5 with additional notes and explanations that apply to the Abacus context.","title":"Metadata guide"},{"location":"admin/metadata_guide/#required-metadata-fields","text":"The table below includes all the metadata fields required by the Dataverse platform. In practice most Abacus datasets have additional metadata to improve description and discovery, but only these fields are enforced by the Abacus interface. Dataverse field label DDI-C 2.5 element Title <titl> Author name <AuthEnty Contact e-mail <contact> Description text <abstract> Subject <subect> Place Contact email/contact name Unique file name (for files in a dataset)","title":"Required metadata fields"},{"location":"admin/metadata_guide/#recommendations-for-non-required-fields","text":"If there are sections that should be deleted, or recommendations. Also a place to note that you need to save the 'basic block' first before you can access the other metadata fields.","title":"Recommendations for non-required fields"},{"location":"admin/metadata_guide/#added-fields-after-creating-the-dataset","text":"These should be added when available to improve findability and consistency across Abacus datasets. Dataverse field label | DDI-C 2.5 element | --- | --- | Production Date | <prodDate> | Geographic Coverage, Country/recommendations | <nation> | Geographic Unit | <geogUnit> | Keyword | <keyword>","title":"Added fields, after creating the dataset"},{"location":"dataset_code/","text":"Dataset code \u00b6 While Abacus contains the licensed data sets for you to work with, that is, the material provided by the publisher, what it doesn't contain is code written by the library and other researchers to work with this data. The Dataset code section provides scripts, tools, and guidance for working with some datasets in Abacus. Material in this section was created by UBC Library or contributed by the research community. If you've written code, queries, or other material that may help other researchers use an Abacus dataset please consider sharing it (contact Jeremy Buhler, Data Librarian, UBC Library at jeremy.buhler@ubc.ca ). Abacus Git repository \u00b6 Computer code, unlike books or even licensed data sets, is notoriously changeable. Browser versions can change frequently; the same can be said for utilities used to analyse data. Because of this, software is often stored on systems which allow version control . More than just indicating the most current version of a piece of software, version control systems allow users to track changes in the software, allowing you to move not only forward and back over versions, but laterally over branched changes. Utilities and code snippets for material in Abacus are stored in such a system, specifically using a version control system called Git . This is more suitable than storing them within Abacus itself, as the Git system is much more user-friendly for copying, modifying and reusing software than the built-in version control system in Abacus. This website and the dataset code is based on files stored in a Git \"repository.\" You don't need to understand Git to use this site, but users familiar with Git and GitHub may prefer to use that interface. Take me to the abacus_resources repository How to use Git \u00b6 There are two possible ways to use Git: from the command line, or using a graphical user interface. There is a (very) basic tutorial available for the command line interface at the [https://git-scm.com/docs/gittutorial] (Git website). There is also no shortage of tutorials vaialble simpy by searching for \"Git tutorial\". Graphical user interfaces will vary by designer and users will undoubtedly have opinions on which is better or worse. Searching for \"Best Git GUI\" will produce pages of users arguing on internet forums. Git has an \"official\" client, Github Desktop . If you are completely new to the concept and prefer something hands on and less technically dry, there is a free game which teaches the basics of Git: Oh My Git .","title":"Dataset code"},{"location":"dataset_code/#dataset-code","text":"While Abacus contains the licensed data sets for you to work with, that is, the material provided by the publisher, what it doesn't contain is code written by the library and other researchers to work with this data. The Dataset code section provides scripts, tools, and guidance for working with some datasets in Abacus. Material in this section was created by UBC Library or contributed by the research community. If you've written code, queries, or other material that may help other researchers use an Abacus dataset please consider sharing it (contact Jeremy Buhler, Data Librarian, UBC Library at jeremy.buhler@ubc.ca ).","title":"Dataset code"},{"location":"dataset_code/#abacus-git-repository","text":"Computer code, unlike books or even licensed data sets, is notoriously changeable. Browser versions can change frequently; the same can be said for utilities used to analyse data. Because of this, software is often stored on systems which allow version control . More than just indicating the most current version of a piece of software, version control systems allow users to track changes in the software, allowing you to move not only forward and back over versions, but laterally over branched changes. Utilities and code snippets for material in Abacus are stored in such a system, specifically using a version control system called Git . This is more suitable than storing them within Abacus itself, as the Git system is much more user-friendly for copying, modifying and reusing software than the built-in version control system in Abacus. This website and the dataset code is based on files stored in a Git \"repository.\" You don't need to understand Git to use this site, but users familiar with Git and GitHub may prefer to use that interface. Take me to the abacus_resources repository","title":"Abacus Git repository"},{"location":"dataset_code/#how-to-use-git","text":"There are two possible ways to use Git: from the command line, or using a graphical user interface. There is a (very) basic tutorial available for the command line interface at the [https://git-scm.com/docs/gittutorial] (Git website). There is also no shortage of tutorials vaialble simpy by searching for \"Git tutorial\". Graphical user interfaces will vary by designer and users will undoubtedly have opinions on which is better or worse. Searching for \"Best Git GUI\" will produce pages of users arguing on internet forums. Git has an \"official\" client, Github Desktop . If you are completely new to the concept and prefer something hands on and less technically dry, there is a free game which teaches the basics of Git: Oh My Git .","title":"How to use Git"},{"location":"dataset_code/bc_assessment/bc_assessment/","text":"Dataset name BC Assessment Data Advice and Inventory Extracts Permanent URL https://hdl.handle.net/11272.1/AB2/LAPUAB Data access rules Restricted to researchers currently affiliated with UBC Info The BC Assessment data in Abacus is currently restricted to UBC users, but other institutions may have access to the data in other forms. Contact your university library for more information. Data format and conversion \u00b6 BC Assessment provides data in XML and TXT format. To make the large XML files more accessible to researchers, UBC Library converts each to a series of CSV files and a SQLite database. Both the original files and the transformed versions are available in Abacus. The SQLite version is recommended for most users. For those interested in the file conversion, the process to create the SQLite database from the original XML and TXT files is outlined in these files: BCA_data_transformation_notes.txt describes the steps involved BCA_REVD_stylesheet.xsl is the XSLT stylesheet used in the transformation Using the sqlite database \u00b6 The open source DB Browser for SQLite is a good cross-platform tool for exploring and querying the SQLite version of the BC Assessment data: https://sqlitebrowser.org The database consists of 13 tables. Table and field names correspond to the XML elements and CSV fields described in the BC Assessment user guides available from https://www1.bcassessment.ca/Support/Guide . Table name Documentation address Data Advice user guide assessmentAreaKey Data Advice user guide commercialInventory Commercial Inventory Extract user guide folio Data Advice user guide folioDescription Data Advice user guide jurisdictionKey Data Advice user guide legalDescription Data Advice user guide metadata not a data table; info about the database residentialInventory Residential Inventory Extract user guide sales Data Advice user guide valuation Data Advice user guide value Data Advice user guide Important All fields in the BC Assessment SQLite database are in the \"text\" data type by default. Joining tables \u00b6 Most users will need to join tables to access the data that interests them. The 10 tables derived from the Data Advice product can be joined on the folio_id field. The two tables derived from Inventory Extract products ( residentialInventory and commercialInventory ) do not have folio IDs but can be joined to the folio table using roll_number and jurisdiction . Important Roll numbers are unique within a jurisdiction but may be repeated across jurisdictions. When joining on roll_number also join on jurisdiction to avoid unintended results. Sales data \u00b6 The sales table contains data about the three most recent sales for each property in the database, regardless of when they occurred. The SQLite database for a given year includes most sales for that year but it does not necessarily provide a complete picture for previous periods. Assessed property values \u00b6 The valuation table contains assessed values for each folio, reported as landValue and improvementValue . The value table contains similar information but with additional values for BC Transit and School purposes (see the valueType field). For most questions about assessed value use the valuation table. Some elements in the source XML are repeatable, including valuation. This means that one folio can have more than one entry in the valuation table (each with a different taxExemptCOde or propertyClassCode , for example). Consult the documentation and ensure your analysis accounts for multiple entries. SQL queries \u00b6 With the SQLite browser it's easy to filter tables and export to CSV, but SQL queries are the most efficient way to extract a subset of the data that fits your parameters. If you are new to SQL the W3Schools SQL Tutorial is a good place to learn the basics. abacusBCA package \u00b6 The abacusBCA R package created by Jens von Bergmann facilitates data access and basic processing of BC Assessment data hosted on Abacus for research purposes. It has the ability to conveniently download the data and open a local sqlite connection. Users will have to specify their own abacus API token as environment variable to use this. Link to github repository: https://github.com/mountainMath/abacusBCA Link to documentation: https://mountainmath.github.io/abacusbca/","title":"BC Assessment data"},{"location":"dataset_code/bc_assessment/bc_assessment/#data-format-and-conversion","text":"BC Assessment provides data in XML and TXT format. To make the large XML files more accessible to researchers, UBC Library converts each to a series of CSV files and a SQLite database. Both the original files and the transformed versions are available in Abacus. The SQLite version is recommended for most users. For those interested in the file conversion, the process to create the SQLite database from the original XML and TXT files is outlined in these files: BCA_data_transformation_notes.txt describes the steps involved BCA_REVD_stylesheet.xsl is the XSLT stylesheet used in the transformation","title":"Data format and conversion"},{"location":"dataset_code/bc_assessment/bc_assessment/#using-the-sqlite-database","text":"The open source DB Browser for SQLite is a good cross-platform tool for exploring and querying the SQLite version of the BC Assessment data: https://sqlitebrowser.org The database consists of 13 tables. Table and field names correspond to the XML elements and CSV fields described in the BC Assessment user guides available from https://www1.bcassessment.ca/Support/Guide . Table name Documentation address Data Advice user guide assessmentAreaKey Data Advice user guide commercialInventory Commercial Inventory Extract user guide folio Data Advice user guide folioDescription Data Advice user guide jurisdictionKey Data Advice user guide legalDescription Data Advice user guide metadata not a data table; info about the database residentialInventory Residential Inventory Extract user guide sales Data Advice user guide valuation Data Advice user guide value Data Advice user guide Important All fields in the BC Assessment SQLite database are in the \"text\" data type by default.","title":"Using the sqlite database"},{"location":"dataset_code/bc_assessment/bc_assessment/#joining-tables","text":"Most users will need to join tables to access the data that interests them. The 10 tables derived from the Data Advice product can be joined on the folio_id field. The two tables derived from Inventory Extract products ( residentialInventory and commercialInventory ) do not have folio IDs but can be joined to the folio table using roll_number and jurisdiction . Important Roll numbers are unique within a jurisdiction but may be repeated across jurisdictions. When joining on roll_number also join on jurisdiction to avoid unintended results.","title":"Joining tables"},{"location":"dataset_code/bc_assessment/bc_assessment/#sales-data","text":"The sales table contains data about the three most recent sales for each property in the database, regardless of when they occurred. The SQLite database for a given year includes most sales for that year but it does not necessarily provide a complete picture for previous periods.","title":"Sales data"},{"location":"dataset_code/bc_assessment/bc_assessment/#assessed-property-values","text":"The valuation table contains assessed values for each folio, reported as landValue and improvementValue . The value table contains similar information but with additional values for BC Transit and School purposes (see the valueType field). For most questions about assessed value use the valuation table. Some elements in the source XML are repeatable, including valuation. This means that one folio can have more than one entry in the valuation table (each with a different taxExemptCOde or propertyClassCode , for example). Consult the documentation and ensure your analysis accounts for multiple entries.","title":"Assessed property values"},{"location":"dataset_code/bc_assessment/bc_assessment/#sql-queries","text":"With the SQLite browser it's easy to filter tables and export to CSV, but SQL queries are the most efficient way to extract a subset of the data that fits your parameters. If you are new to SQL the W3Schools SQL Tutorial is a good place to learn the basics.","title":"SQL queries"},{"location":"dataset_code/bc_assessment/bc_assessment/#abacusbca-package","text":"The abacusBCA R package created by Jens von Bergmann facilitates data access and basic processing of BC Assessment data hosted on Abacus for research purposes. It has the ability to conveniently download the data and open a local sqlite connection. Users will have to specify their own abacus API token as environment variable to use this. Link to github repository: https://github.com/mountainMath/abacusBCA Link to documentation: https://mountainmath.github.io/abacusbca/","title":"abacusBCA package"},{"location":"dataset_code/pccf/pccf/","text":"Dataset name Postal Code Conversion File and Postal Code Conversion File Plus Permanent URL There are multiple PCCF/PCCF+ records in Abacus; this Abacus search URL will return many of them Data access rules Restricted to researchers currently affiliated with SFU, UBC, UNBC, and UVic Postal Code Conversion Files allow researchers to map postal codes to Census geographies. Data with postal codes can be aggregated to standard geographies for reporting purposes or combined with other data available by Census geography (e.g. census tract, census subdivision). Note PCCF files do not contain any socioeconomic or demographic data themselves, they are just a key for aggregating or combining data files from other sources. Postal Code Conversion Files come in two flavours, the PCCF and PCCF+ . Postal Code boundaries do not perfectly match census boundaries: one postal code may span multiple census subdivisions, for example. The PCCF and PCCF+ differ in how they handle this kind of overlap. The PCCF file contains a Single Link Indicator (SLI) field to indicate the geographic area with the majority of dwellings assigned to a particular postal code. The PCCF+ is a SAS program using a population weighted random algorithm to increase accuracy where postal codes span over more than one geographic area from Queen's University Library's Guide to the PCCF/PCCF+ Which PCCF/PCCF+ file should I use? \u00b6 There are more than 50 PCCF/PCCF+ files in Abacus with different dates. This is because Postal Code and Census geographies change over time. Choose a PCCF/PCCF+ file with a Postal Code date as close as possible to the collection date of the data that contains the Postal Codes. Guides to the PCCF/PCCF+ \u00b6 Queens University Library maintains an excellent guide on PCCF and PCCF+ files, including step-by-step instructions for using the PCCF+ with SAS: https://guides.library.queensu.ca/PCCF/PCCF . PCCF helper scripts \u00b6 Recent PCCF files in Abacus include an SPSS syntax file to parse the data and assigns labels, making it easier to work with. Older PCCF records may only come with data files (e.g. this 2003 version ). When no syntax file is available researchers can use other tools to parse the data. The R script below provides an example that can be adapted to other files and contexts. pccf_prep_script.R # PCCF processing script, for June 2003 postal codes, 2001 Census # source files at https://hdl.handle.net/11272.1/AB2/QA758U # script assumes source files are in R working directory: # # - pccf59_JUN03_fccp59.txt # - fed02.dat # - cd02.dat # - sac03.dat # install readr package install . packages ( \"readr\" ) # load readr for use library ( readr ) # read pccf data file and parse into columns based on 'record layout' on p13 of PCCF reference guide # store output as 'formatted_pccf' formatted_pccf <- read_fwf ( \"pccf59_JUN03_fccp59.txt\" , fwf_widths ( c ( 6 , 3 , 8 , 2 , 9 , 11 , 1 , 2 , 4 , 3 , 70 , 3 , 3 , 3 , 1 , 7 , 2 , 4 , 5 , 4 , 1 , 1 , 1 , 30 , 1 , 1 , 8 , 8 ), c ( \"Postal Code\" , \"FSA\" , \"DAuid\" , \"Block\" , \"Lat\" , \"Long\" , \"SLI\" , \"PR\" , \"CDuid\" , \"CSD\" , \"CSDname\" , \"CSDtype\" , \"CCS\" , \"SAC\" , \"SACtype\" , \"CTname\" , \"ER\" , \"DPL\" , \"FED96uid\" , \"UARA\" , \"UARAtype\" , \"Rep_Point\" , \"PCtype\" , \"Comm_Name\" , \"DMT\" , \"H_DMT\" , \"Birth_Date\" , \"Ref_Date\" ))) # import and format label files FED96 <- read_fwf ( \"fed02.dat\" , fwf_widths ( c ( 5 , 100 ), c ( \"FED96uid\" , \"FED96name\" ))) SAC <- read_fwf ( \"sac02.dat\" , fwf_widths ( c ( 3 , 100 ), c ( \"SAC\" , \"SACname\" ))) CD <- read_fwf ( \"cd02.dat\" , fwf_widths ( c ( 4 , 100 ), c ( \"CDuid\" , \"CDname\" ))) # merge to add labels tmp_pccf_1 <- merge ( formatted_pccf , FED96 , by = \"FED96uid\" , all . formatted_pccf = TRUE , all . FED96 = FALSE ) tmp_pccf_2 <- merge ( tmp_pccf_1 , SAC , by = \"SAC\" , all . tmp_pccf_1 = TRUE , all . SAC = FALSE ) pccf_with_labels <- merge ( tmp_pccf_2 , CD , by = \"CDuid\" , all . tmp_pccf_2 = TRUE , all . SAC = FALSE ) ## save merged and formatted data as .csv write . csv ( pccf_with_labels , \"pccf_with_labels.csv\" )","title":"Postal Code Conversion Files"},{"location":"dataset_code/pccf/pccf/#which-pccfpccf-file-should-i-use","text":"There are more than 50 PCCF/PCCF+ files in Abacus with different dates. This is because Postal Code and Census geographies change over time. Choose a PCCF/PCCF+ file with a Postal Code date as close as possible to the collection date of the data that contains the Postal Codes.","title":"Which PCCF/PCCF+ file should I use?"},{"location":"dataset_code/pccf/pccf/#guides-to-the-pccfpccf","text":"Queens University Library maintains an excellent guide on PCCF and PCCF+ files, including step-by-step instructions for using the PCCF+ with SAS: https://guides.library.queensu.ca/PCCF/PCCF .","title":"Guides to the PCCF/PCCF+"},{"location":"dataset_code/pccf/pccf/#pccf-helper-scripts","text":"Recent PCCF files in Abacus include an SPSS syntax file to parse the data and assigns labels, making it easier to work with. Older PCCF records may only come with data files (e.g. this 2003 version ). When no syntax file is available researchers can use other tools to parse the data. The R script below provides an example that can be adapted to other files and contexts. pccf_prep_script.R # PCCF processing script, for June 2003 postal codes, 2001 Census # source files at https://hdl.handle.net/11272.1/AB2/QA758U # script assumes source files are in R working directory: # # - pccf59_JUN03_fccp59.txt # - fed02.dat # - cd02.dat # - sac03.dat # install readr package install . packages ( \"readr\" ) # load readr for use library ( readr ) # read pccf data file and parse into columns based on 'record layout' on p13 of PCCF reference guide # store output as 'formatted_pccf' formatted_pccf <- read_fwf ( \"pccf59_JUN03_fccp59.txt\" , fwf_widths ( c ( 6 , 3 , 8 , 2 , 9 , 11 , 1 , 2 , 4 , 3 , 70 , 3 , 3 , 3 , 1 , 7 , 2 , 4 , 5 , 4 , 1 , 1 , 1 , 30 , 1 , 1 , 8 , 8 ), c ( \"Postal Code\" , \"FSA\" , \"DAuid\" , \"Block\" , \"Lat\" , \"Long\" , \"SLI\" , \"PR\" , \"CDuid\" , \"CSD\" , \"CSDname\" , \"CSDtype\" , \"CCS\" , \"SAC\" , \"SACtype\" , \"CTname\" , \"ER\" , \"DPL\" , \"FED96uid\" , \"UARA\" , \"UARAtype\" , \"Rep_Point\" , \"PCtype\" , \"Comm_Name\" , \"DMT\" , \"H_DMT\" , \"Birth_Date\" , \"Ref_Date\" ))) # import and format label files FED96 <- read_fwf ( \"fed02.dat\" , fwf_widths ( c ( 5 , 100 ), c ( \"FED96uid\" , \"FED96name\" ))) SAC <- read_fwf ( \"sac02.dat\" , fwf_widths ( c ( 3 , 100 ), c ( \"SAC\" , \"SACname\" ))) CD <- read_fwf ( \"cd02.dat\" , fwf_widths ( c ( 4 , 100 ), c ( \"CDuid\" , \"CDname\" ))) # merge to add labels tmp_pccf_1 <- merge ( formatted_pccf , FED96 , by = \"FED96uid\" , all . formatted_pccf = TRUE , all . FED96 = FALSE ) tmp_pccf_2 <- merge ( tmp_pccf_1 , SAC , by = \"SAC\" , all . tmp_pccf_1 = TRUE , all . SAC = FALSE ) pccf_with_labels <- merge ( tmp_pccf_2 , CD , by = \"CDuid\" , all . tmp_pccf_2 = TRUE , all . SAC = FALSE ) ## save merged and formatted data as .csv write . csv ( pccf_with_labels , \"pccf_with_labels.csv\" )","title":"PCCF helper scripts"},{"location":"en/guides/user/","text":"User guide \u00b6 While Abacus is designed to be as easy to use as possible, searching for and using data is complex by its very nature. To help you start to navigate Abacus, here are some basic instructions on key activities and functions. If you already know the basics and wish to explore further, please see the search syntax page and the Advanced User's Guide . Login \u00b6 Your first login \u00b6 If you have never logged in to Abacus, when you log in for the first time from your institutional web page, you will be taken to the account creation page. Abacus will automatically create an account which uses information provided by your institution. Verify that your account details are correct and confirm them. Click on the Abacus logo at the top left of the page, and you will be able to use the Abacus service. Info You will only need to perform the above on your very first login. The primary Abacus web page is located at https://abacus.library.ubc.ca . Anyone may search Abacus and view the data descriptions but many data files can only be accessed by users affiliated with SFU, UBC, UNBC, or UVic. To work with these licensed files you will need to log in with your university credentials. If you have come directly to the Abacus home page, as opposed to navigating from your institution's library web site, follow these instructions to log in : SFU, UBC, and UNBC users UVic users Use the Log In link at the extreme right of the top menu bar. By default, you will be presented with a drop down list showing SFU, UBC, and UNBC. Select your institution and login using the credentials supplied by your university, such as the Campus-wide Login (CWL) used at the University of British Columbia. If the drop-down list of institutions is not visible and you are being prompted for username/password authentication, you will see Other options underneath the dialogue boxes, with a button labelled Your Institution . Clicking on this button will produce the drop-down list as described above. It is not necessary to select a username/password for Abacus , an account will be created for you the first time you login. Your institutional login ID is all that is required to access and download files to which your university has access. Login here using your university credentials. After login you will be redirected to the UVic collection in Abacus. Search \u00b6 This section introduces Abacus search options. For more information see the search syntax page. Default search \u00b6 Searching is possible from almost anywhere inside Abacus. From the main page at https://abacus.library.ubc.ca , the search feature will search the entire contents of Abacus, including material to which your institution may not have access. To easily limit your search to material to which your account has access, select your university from the icons at the top of the page. To limit your search to material that is available to the public without login, select the Abacus Open Data icon. Should your search produce too many results, it can be narrowed by selecting the facets on the left side of the page, such as \"Producer Name\". Facets may also be discarded once applied by clicking on them after they appear at the top of the search results. Selected search tips \u00b6 Boolean operators . By default, search terms are connected with the Boolean OR operator. Use AND between search terms if you would like results to contain all your terms: e.g. adult AND literacy AND education . Searching for phrases . Enclose search terms in double quotation marks to find records that contain the exact phrase: e.g. \"adult literacy\" . Be careful not to inadvertently exclude material of interest: for example, a search for \"adult literacy survey\" will return the International Adult Literacy Survey (IALS) , but not the Adult Literacy and Life Skills Survey . Wildcards . Abacus supports single- and multiple-character wildcards: ? to match one character. ?oom matches \"zoom\", \"room\", and \"boom\", but not \"broom\". * to match zero or more characters. revolution* matches \"revolution\", \"revolutionary\", and \"revolutionaries\". Info Wildcard operators function only on terms, not phrases. For more detail and additional tips see Search syntax . Advanced search \u00b6 The Advanced search will allow you to search by very specific individual fields and to search within the data itself for applicable datasets. Note that not all datasets have variable-level searching implemented, nor does every study in Abacus have every field filled, as some values are not applicable to some types of datasets. Local vs global search \u00b6 Abacus supports two distinct search scopes : \"global\" and \"local\". Using the search box on the left-hand side of the user interface will limit results to the dataverse currently selected (a \"local\" search), while using the search box through selecting the \"Search\" drop-down menu at the top of the user interface will execute a query on all dataverses in the Abacus Data Network (a \"global\" search, as shown below). Search syntax \u00b6 Boolean logical operators \u00b6 Boolean logical operators greatly improve the power and efficiency of queries. By default, search terms are connected with the Boolean OR operator. Thus, the search adult literacy survey will match material containing \"adult\", \"literacy\", or \"survey\", but not necessarily all three. For results that contain all search terms, use the AND operator: adult AND literacy AND survey . In addition to the AND and OR operators, other useful Boolean operators include NOT , + , and - . The NOT and - operators function similarly, requiring that the term following the operator not be present in search results, while the + operator requires that the term is present. For instance, literacy NOT child , or literacy -child , will return all results containing \"literacy\" without the term \"child\", while +\"adult literacy\" survey returns results with the phrase \"adult literacy\" that may or may not contain the term \"survey\". In addition to their word form, Boolean operators can also be called in symbol form: Word Symbol AND && OR || NOT ! Info To use Boolean operators in word form (e.g. AND , OR , NOT ), all letters must be uppercase. Additionally, when using the ! operator, unlike its word form NOT , do not include a space before the term it applies to. correct: education !primary incorrect: education ! primary . For added control over the Boolean logic of a search, users can group clauses to form sub-queries using parentheses. Searching for vaccine AND (\"corona virus\" OR \"COVID-19\") will return material that matches either \"vaccine\" and \"corona virus\" or \"vaccine\" and \"COVID-19\". Querying specific fields \u00b6 Users can also narrow their search within Abacus by querying specific fields . The syntax for this requires, first, specifiying the field to be searched (e.g. title ), followed by a : , and then the term to search for: title : financial . (NOTE: There is no space between the colon and the search term. ) Searching for multiple terms within a field requires specifying the field before each term. For example, the sytnax for searching for the terms \"labour\", \"force\", and \"survey\" within the \"title\" field is title : labour AND title : force AND title : survey . Using the query title : labour force survey will search for \"labour\" in the \"title\" field and \"force\" and \"survey\" in any other metadata field. To search for the phrase \"labour force survey\" in the \"title\" field, wrap the phrase in double quotation marks: title:\"labour force survey\" . Specifying a date range \u00b6 Searching by specifying a date range can also be an effective way to find data. Range syntax is denoted in Abacus as [ TO ] , where both a lower and upper bound are specified. Different types of brackets indicate whether these bounds are inclusive or exclusive. Square brackets [] represent inclusive lower and upper bounds, whereas curly brackets {} represent exclusive bounds. These can be combined in a single query: {1956-02-16 TO 1988-05-03] . Dates in Abacus are formatted as YYYY-MM-DD , where: YYYY is the year, MM is the month, DD is the day of the month, Truncation: Users do not need to specify complete dates and times to search using date ranges. For instance, the search pubdate:[1956 TO 1998-05] using the \"publication date\" field will produce relevant material from (and including) 1 January 1956 through 31 May 1998. Wildcard: You may use the * wildcard as the lower or upper bound. Entering [* TO 2001-09-11} would return all matched items from the earliest in the repository up to (but excluding) 11 September 2001, whereas entering [2001-09-11 TO *] would return all matched items from (and including) 11 September 2001 up to the most recent matched deposit. Download \u00b6 Once you've found a data set in the search, click on the title and you'll be taken to its page. By default, you are taken to a short display with an abstract and a listing of files. For each file, you may have several options, depending on its type. To quickly download the file, click on the Download button For statistical files which are available for online analysis, you can view their contents and download in a variety of formats by using the Explore button. You will also be able to view summary statistics for these data sets and create cross-tabulations, as well as search within the data set itself at the variable level. Linking and downloading individual files \u00b6 To see a preview (if available), permanent URL and other metadata for a particular file, click on the filename . The next page will provide citations for both the data set and the individual file , as well as a record of any changes to the file itself. The file may be downloaded by clicking the Download button. The metadata tab will may also provide a direct download link (if available), and display an md5 checksum should you wish to verify your download. If there is no direct download link, and programmatic access is required, the using the equivalent of the following curl commands will allow direct download. Publicly accessible data files \u00b6 As an example, the 2020 Labour Force Survey data: File page for the August 2020 ASCII data : https://dvn.library.ubc.ca/file.xhtml?persistentId=hdl:11272.1/AB2/GGXMM2/KMGN1A&version=2.0 To download this file: curl \"https://abacus.library.ubc.ca/api/access/datafile/:persistentId/?persistentId=hdl:11272.1/AB2/GGXMM2/KMGN1A\" -o micro2020-08.zip\" Licensed data \u00b6 To download licensed data, you will need an API token (see the Advanced User's Guide ) As an example, the CanMap Content Suite, v2019.3 : File page for the WatershedsRegion.zip file: https://dvn.library.ubc.ca/file.xhtml?persistentId=hdl:11272.1/AB2/PCTBFN/IBVPVN&version=1.0 To download this file: curl -H \"X-Dataverse-key: YOURAPITOKEN\" \"https://abacus.library.ubc.ca/api/access/datafile/:persistentId/?persistentId=hdl:11272.1/AB2/PCTBFN/IBVPVN\" -o WatershedsRegion.zip Where YOURAPITOKEN is your account's API token. Bulk downloads \u00b6 To download multiple files at once, select the checkbox at the left of the top row of the file table. This will automatically select all of the files in the study. Download the files using Download button on the top row of the table. For data sets with very large files, such as the geospatial datasets from DMTI Spatial Inc. or compilations of lidar or orthoimagery, downloads may be truncated due to size limits on zip files. Other download options are available, such as API based downloads (as per the Advanced User's Guide ). Metadata \u00b6 To view the metadata or detailed description of the material in Abacus, select the Metadata tab of the data set in which you are viewing. By default, citation metadata is visible, with other sections of metadata (such as Geospatial data) is only visible after clicking on the appropriate button. For many social science data sets, much of the metadata will be stored in the Social Science and Humanities Metadata section, such as sample information, etc. Study metadata can be exported in a variety of formats for use in other applications by selecting the format desired from the Export Metadata button found just above the citation metadata. Some formats can be used with citation managers, such as DataCite and Dublin Core, but import formats are dependent entirely on the citation manager software. Help/support \u00b6 For more detailed information beyond this brief guide, please see the Advanced User's Guide , which will give a detailed overview of the use of Dataverse, the software which powers Abacus. Support within Abacus itself is available as well. For email assistance, use the Support link in the interface menu bar. For support with specific data sets, or to report errors and technical issues, within each record you can use the Contact button just above and to the right of the dataset title. Note that in most cases, the Support and Contact buttons will be sent to the same people, ie Abacus Support .","title":"User guide"},{"location":"en/guides/user/#user-guide","text":"While Abacus is designed to be as easy to use as possible, searching for and using data is complex by its very nature. To help you start to navigate Abacus, here are some basic instructions on key activities and functions. If you already know the basics and wish to explore further, please see the search syntax page and the Advanced User's Guide .","title":"User guide"},{"location":"en/guides/user/#login","text":"","title":"Login"},{"location":"en/guides/user/#your-first-login","text":"If you have never logged in to Abacus, when you log in for the first time from your institutional web page, you will be taken to the account creation page. Abacus will automatically create an account which uses information provided by your institution. Verify that your account details are correct and confirm them. Click on the Abacus logo at the top left of the page, and you will be able to use the Abacus service. Info You will only need to perform the above on your very first login. The primary Abacus web page is located at https://abacus.library.ubc.ca . Anyone may search Abacus and view the data descriptions but many data files can only be accessed by users affiliated with SFU, UBC, UNBC, or UVic. To work with these licensed files you will need to log in with your university credentials. If you have come directly to the Abacus home page, as opposed to navigating from your institution's library web site, follow these instructions to log in : SFU, UBC, and UNBC users UVic users Use the Log In link at the extreme right of the top menu bar. By default, you will be presented with a drop down list showing SFU, UBC, and UNBC. Select your institution and login using the credentials supplied by your university, such as the Campus-wide Login (CWL) used at the University of British Columbia. If the drop-down list of institutions is not visible and you are being prompted for username/password authentication, you will see Other options underneath the dialogue boxes, with a button labelled Your Institution . Clicking on this button will produce the drop-down list as described above. It is not necessary to select a username/password for Abacus , an account will be created for you the first time you login. Your institutional login ID is all that is required to access and download files to which your university has access. Login here using your university credentials. After login you will be redirected to the UVic collection in Abacus.","title":"Your first login"},{"location":"en/guides/user/#search","text":"This section introduces Abacus search options. For more information see the search syntax page.","title":"Search"},{"location":"en/guides/user/#default-search","text":"Searching is possible from almost anywhere inside Abacus. From the main page at https://abacus.library.ubc.ca , the search feature will search the entire contents of Abacus, including material to which your institution may not have access. To easily limit your search to material to which your account has access, select your university from the icons at the top of the page. To limit your search to material that is available to the public without login, select the Abacus Open Data icon. Should your search produce too many results, it can be narrowed by selecting the facets on the left side of the page, such as \"Producer Name\". Facets may also be discarded once applied by clicking on them after they appear at the top of the search results.","title":"Default search"},{"location":"en/guides/user/#advanced-search","text":"The Advanced search will allow you to search by very specific individual fields and to search within the data itself for applicable datasets. Note that not all datasets have variable-level searching implemented, nor does every study in Abacus have every field filled, as some values are not applicable to some types of datasets.","title":"Advanced search"},{"location":"en/guides/user/#local-vs-global-search","text":"Abacus supports two distinct search scopes : \"global\" and \"local\". Using the search box on the left-hand side of the user interface will limit results to the dataverse currently selected (a \"local\" search), while using the search box through selecting the \"Search\" drop-down menu at the top of the user interface will execute a query on all dataverses in the Abacus Data Network (a \"global\" search, as shown below).","title":"Local vs global search"},{"location":"en/guides/user/#search-syntax","text":"","title":"Search syntax"},{"location":"en/guides/user/#boolean-logical-operators","text":"Boolean logical operators greatly improve the power and efficiency of queries. By default, search terms are connected with the Boolean OR operator. Thus, the search adult literacy survey will match material containing \"adult\", \"literacy\", or \"survey\", but not necessarily all three. For results that contain all search terms, use the AND operator: adult AND literacy AND survey . In addition to the AND and OR operators, other useful Boolean operators include NOT , + , and - . The NOT and - operators function similarly, requiring that the term following the operator not be present in search results, while the + operator requires that the term is present. For instance, literacy NOT child , or literacy -child , will return all results containing \"literacy\" without the term \"child\", while +\"adult literacy\" survey returns results with the phrase \"adult literacy\" that may or may not contain the term \"survey\". In addition to their word form, Boolean operators can also be called in symbol form: Word Symbol AND && OR || NOT ! Info To use Boolean operators in word form (e.g. AND , OR , NOT ), all letters must be uppercase. Additionally, when using the ! operator, unlike its word form NOT , do not include a space before the term it applies to. correct: education !primary incorrect: education ! primary . For added control over the Boolean logic of a search, users can group clauses to form sub-queries using parentheses. Searching for vaccine AND (\"corona virus\" OR \"COVID-19\") will return material that matches either \"vaccine\" and \"corona virus\" or \"vaccine\" and \"COVID-19\".","title":"Boolean logical operators"},{"location":"en/guides/user/#querying-specific-fields","text":"Users can also narrow their search within Abacus by querying specific fields . The syntax for this requires, first, specifiying the field to be searched (e.g. title ), followed by a : , and then the term to search for: title : financial . (NOTE: There is no space between the colon and the search term. ) Searching for multiple terms within a field requires specifying the field before each term. For example, the sytnax for searching for the terms \"labour\", \"force\", and \"survey\" within the \"title\" field is title : labour AND title : force AND title : survey . Using the query title : labour force survey will search for \"labour\" in the \"title\" field and \"force\" and \"survey\" in any other metadata field. To search for the phrase \"labour force survey\" in the \"title\" field, wrap the phrase in double quotation marks: title:\"labour force survey\" .","title":"Querying specific fields"},{"location":"en/guides/user/#specifying-a-date-range","text":"Searching by specifying a date range can also be an effective way to find data. Range syntax is denoted in Abacus as [ TO ] , where both a lower and upper bound are specified. Different types of brackets indicate whether these bounds are inclusive or exclusive. Square brackets [] represent inclusive lower and upper bounds, whereas curly brackets {} represent exclusive bounds. These can be combined in a single query: {1956-02-16 TO 1988-05-03] . Dates in Abacus are formatted as YYYY-MM-DD , where: YYYY is the year, MM is the month, DD is the day of the month, Truncation: Users do not need to specify complete dates and times to search using date ranges. For instance, the search pubdate:[1956 TO 1998-05] using the \"publication date\" field will produce relevant material from (and including) 1 January 1956 through 31 May 1998. Wildcard: You may use the * wildcard as the lower or upper bound. Entering [* TO 2001-09-11} would return all matched items from the earliest in the repository up to (but excluding) 11 September 2001, whereas entering [2001-09-11 TO *] would return all matched items from (and including) 11 September 2001 up to the most recent matched deposit.","title":"Specifying a date range"},{"location":"en/guides/user/#download","text":"Once you've found a data set in the search, click on the title and you'll be taken to its page. By default, you are taken to a short display with an abstract and a listing of files. For each file, you may have several options, depending on its type. To quickly download the file, click on the Download button For statistical files which are available for online analysis, you can view their contents and download in a variety of formats by using the Explore button. You will also be able to view summary statistics for these data sets and create cross-tabulations, as well as search within the data set itself at the variable level.","title":"Download"},{"location":"en/guides/user/#linking-and-downloading-individual-files","text":"To see a preview (if available), permanent URL and other metadata for a particular file, click on the filename . The next page will provide citations for both the data set and the individual file , as well as a record of any changes to the file itself. The file may be downloaded by clicking the Download button. The metadata tab will may also provide a direct download link (if available), and display an md5 checksum should you wish to verify your download. If there is no direct download link, and programmatic access is required, the using the equivalent of the following curl commands will allow direct download.","title":"Linking and downloading individual files"},{"location":"en/guides/user/#bulk-downloads","text":"To download multiple files at once, select the checkbox at the left of the top row of the file table. This will automatically select all of the files in the study. Download the files using Download button on the top row of the table. For data sets with very large files, such as the geospatial datasets from DMTI Spatial Inc. or compilations of lidar or orthoimagery, downloads may be truncated due to size limits on zip files. Other download options are available, such as API based downloads (as per the Advanced User's Guide ).","title":"Bulk downloads"},{"location":"en/guides/user/#metadata","text":"To view the metadata or detailed description of the material in Abacus, select the Metadata tab of the data set in which you are viewing. By default, citation metadata is visible, with other sections of metadata (such as Geospatial data) is only visible after clicking on the appropriate button. For many social science data sets, much of the metadata will be stored in the Social Science and Humanities Metadata section, such as sample information, etc. Study metadata can be exported in a variety of formats for use in other applications by selecting the format desired from the Export Metadata button found just above the citation metadata. Some formats can be used with citation managers, such as DataCite and Dublin Core, but import formats are dependent entirely on the citation manager software.","title":"Metadata"},{"location":"en/guides/user/#helpsupport","text":"For more detailed information beyond this brief guide, please see the Advanced User's Guide , which will give a detailed overview of the use of Dataverse, the software which powers Abacus. Support within Abacus itself is available as well. For email assistance, use the Support link in the interface menu bar. For support with specific data sets, or to report errors and technical issues, within each record you can use the Contact button just above and to the right of the dataset title. Note that in most cases, the Support and Contact buttons will be sent to the same people, ie Abacus Support .","title":"Help/support"},{"location":"en/guides/user/search/","text":"Search syntax tips \u00b6 Boolean logical operators Search scope Querying specific fields Specifying a date range Boolean logical operators \u00b6 Boolean logical operators greatly improve the power and efficiency of queries. By default, search terms are connected with the Boolean OR operator. Thus, the search adult literacy survey will match material containing \"adult\", \"literacy\", or \"survey\", but not necessarily all three. For results that contain all search terms, use the AND operator: adult AND literacy AND survey . In addition to the AND and OR operators, other useful Boolean operators include NOT , + , and - . The NOT and - operators function similarly, requiring that the term following the operator not be present in search results, while the + operator requires that the term is present. For instance, literacy NOT child , or literacy -child , will return all results containing \"literacy\" without the term \"child\", while +\"adult literacy\" survey returns results with the phrase \"adult literacy\" that may or may not contain the term \"survey\". In addition to their word form, Boolean operators can also be called in symbol form: Word Symbol AND && OR || NOT ! To use Boolean operators in word form (e.g. AND , OR , NOT ), all letters must be uppercase. Additionally, when using the ! operator, unlike its word form NOT , do not include a space before the term it applies to--correct: education !primary , incorrect: education ! primary . For added control over the Boolean logic of a search, users can group clauses to form sub-queries using parentheses. Searching for vaccine AND (\"corona virus\" OR \"COVID-19\") will return material that matches either \"vaccine\" and \"corona virus\" or \"vaccine\" and \"COVID-19\". Search scope \u00b6 Abacus supports two distinct search scopes : \"global\" and \"local\". Using the search box on the left-hand side of the user interface will limit results to the dataverse currently selected (a \"local\" search), while using the search box through selecting the \"Search\" drop-down menu at the top of the user interface will execute a query on all dataverses in the Abacus Data Network (a \"global\" search). Querying specific fields \u00b6 Users can also narrow their search within Abacus by querying specific fields . The syntax for this requires, first, specifiying the field to be searched (e.g. title ), followed by a : , and then the term to search for: title : financial . (NOTE: There is no space between the colon and the search term. ) Searching for multiple terms within a field requires specifying the field before each term. For example, the sytnax for searching for the terms \"labour\", \"force\", and \"survey\" within the \"title\" field is title : labour AND title : force AND title : survey . Using the query title : labour force survey will search for \"labour\" in the \"title\" field and \"force\" and \"survey\" in any other metadata field. To search for the phrase \"labour force survey\" in the \"title\" field, wrap the phrase in double quotation marks: title:\"labour force survey\" . Specifying a date range \u00b6 Searching by specifying a date range can also be an effective way to find data. Range syntax is denoted in Abacus as [ TO ] , where both a lower and upper bound are specified. Different types of brackets indicate whether these bounds are inclusive or exclusive. Square brackets [] represent inclusive lower and upper bounds, whereas curly brackets {} represent exclusive bounds. These can be combined in a single query: {1956-02-16 TO 1988-05-03] . Dates in Abacus are formatted as YYYY-MM-DD , where: - YYYY is the year, - MM is the month, - DD is the day of the month, Truncation: Users do not need to specify complete dates and times to search using date ranges. For instance, the search pubdate:[1956 TO 1998-05] using the \"publication date\" field will produce relevant material from (and including) 1 January 1956 through 31 May 1998. Wildcard: You may use the * wildcard as the lower or upper bound. Entering [* TO 2001-09-11} would return all matched items from the earliest in the repository up to (but excluding) 11 September 2001, whereas entering [2001-09-11 TO *] would return all matched items from (and including) 11 September 2001 up to the most recent matched deposit.","title":"Search syntax tips"},{"location":"en/guides/user/search/#search-syntax-tips","text":"Boolean logical operators Search scope Querying specific fields Specifying a date range","title":"Search syntax tips"},{"location":"en/guides/user/search/#boolean-logical-operators","text":"Boolean logical operators greatly improve the power and efficiency of queries. By default, search terms are connected with the Boolean OR operator. Thus, the search adult literacy survey will match material containing \"adult\", \"literacy\", or \"survey\", but not necessarily all three. For results that contain all search terms, use the AND operator: adult AND literacy AND survey . In addition to the AND and OR operators, other useful Boolean operators include NOT , + , and - . The NOT and - operators function similarly, requiring that the term following the operator not be present in search results, while the + operator requires that the term is present. For instance, literacy NOT child , or literacy -child , will return all results containing \"literacy\" without the term \"child\", while +\"adult literacy\" survey returns results with the phrase \"adult literacy\" that may or may not contain the term \"survey\". In addition to their word form, Boolean operators can also be called in symbol form: Word Symbol AND && OR || NOT ! To use Boolean operators in word form (e.g. AND , OR , NOT ), all letters must be uppercase. Additionally, when using the ! operator, unlike its word form NOT , do not include a space before the term it applies to--correct: education !primary , incorrect: education ! primary . For added control over the Boolean logic of a search, users can group clauses to form sub-queries using parentheses. Searching for vaccine AND (\"corona virus\" OR \"COVID-19\") will return material that matches either \"vaccine\" and \"corona virus\" or \"vaccine\" and \"COVID-19\".","title":"Boolean logical operators"},{"location":"en/guides/user/search/#search-scope","text":"Abacus supports two distinct search scopes : \"global\" and \"local\". Using the search box on the left-hand side of the user interface will limit results to the dataverse currently selected (a \"local\" search), while using the search box through selecting the \"Search\" drop-down menu at the top of the user interface will execute a query on all dataverses in the Abacus Data Network (a \"global\" search).","title":"Search scope"},{"location":"en/guides/user/search/#querying-specific-fields","text":"Users can also narrow their search within Abacus by querying specific fields . The syntax for this requires, first, specifiying the field to be searched (e.g. title ), followed by a : , and then the term to search for: title : financial . (NOTE: There is no space between the colon and the search term. ) Searching for multiple terms within a field requires specifying the field before each term. For example, the sytnax for searching for the terms \"labour\", \"force\", and \"survey\" within the \"title\" field is title : labour AND title : force AND title : survey . Using the query title : labour force survey will search for \"labour\" in the \"title\" field and \"force\" and \"survey\" in any other metadata field. To search for the phrase \"labour force survey\" in the \"title\" field, wrap the phrase in double quotation marks: title:\"labour force survey\" .","title":"Querying specific fields"},{"location":"en/guides/user/search/#specifying-a-date-range","text":"Searching by specifying a date range can also be an effective way to find data. Range syntax is denoted in Abacus as [ TO ] , where both a lower and upper bound are specified. Different types of brackets indicate whether these bounds are inclusive or exclusive. Square brackets [] represent inclusive lower and upper bounds, whereas curly brackets {} represent exclusive bounds. These can be combined in a single query: {1956-02-16 TO 1988-05-03] . Dates in Abacus are formatted as YYYY-MM-DD , where: - YYYY is the year, - MM is the month, - DD is the day of the month, Truncation: Users do not need to specify complete dates and times to search using date ranges. For instance, the search pubdate:[1956 TO 1998-05] using the \"publication date\" field will produce relevant material from (and including) 1 January 1956 through 31 May 1998. Wildcard: You may use the * wildcard as the lower or upper bound. Entering [* TO 2001-09-11} would return all matched items from the earliest in the repository up to (but excluding) 11 September 2001, whereas entering [2001-09-11 TO *] would return all matched items from (and including) 11 September 2001 up to the most recent matched deposit.","title":"Specifying a date range"}]}